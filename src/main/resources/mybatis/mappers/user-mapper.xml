<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.toy.user.mapper.UserMapper">

	<sql id="certifiedColumns">
		ID,
		USER_ID,
		CERTIFIED_CODE,
		CERTIFIED_YN,
		I_DATE,
		U_DATE
	</sql>
	
	<select id="findByLockUser" parameterType="UserDTO" resultType="LockUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 해당 사용자 계정 잠금 여부 확인 */
		
		SELECT USER_ID, FAIL_CNT, LOCK_YN, LOCK_DATE
		FROM   T_PERSON
		WHERE  1=1
		AND    USER_ID = #{ userId }
		AND    USE_YN = 'Y'
	</select>
	
	<update id="updateFailLogin" parameterType="LockUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 로그인 실패 횟수 카운팅 */
		
		UPDATE T_PERSON
		SET    FAIL_CNT = #{ failCnt }
		     , LOCK_YN = #{ lockYn }
     	<if test = "failCnt == 5">
     	     , LOCK_DATE = NOW()
     	</if>
     	WHERE  1=1
     	AND    USER_ID = #{ userId }
     	AND    USE_YN = 'Y'
   </update>
   
   <select id="findByUserId" resultType="UserDTO">
		/* com.project.toy.user.mapper.UserMapper, 해당 사용자가 존재하는지 확인 */
		
		SELECT * FROM toy.T_PERSON WHERE USE_YN = 'Y' AND USER_EMAIL = LOWER(#{ userEmail })
	</select>
	
	<select id="findByUserPwd" resultType="UserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 비밀번호 찾기 */
		
		SELECT * FROM toy.T_PERSON WHERE USE_YN = 'Y' AND USER_ID = LOWER(#{ userId }) AND USER_EMAIL = LOWER(#{ userEmail })
	</select>
	
	<update id="updateUserPwd" parameterType="UserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 비밀번호 업데이트 */
		
		UPDATE T_PERSON
		SET    USER_PWD = #{ userPwd }
		     , PWD_U_DATE = NOW()
		WHERE  1=1
		AND    USER_ID = #{ userId }
		AND    USE_YN = 'Y'
	</update>
	
	<update id="updateProfile" parameterType="UpdateUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 계정 정보 업데이트 */
		
		UPDATE T_PERSON
		SET    USER_NICKNAME = #{ userNickname }
		     , USER_EMAIL = #{ userEmail }
		     , PWD_U_DATE = NOW()
		WHERE  1=1
		AND    USER_ID = #{ userId }
		AND    USE_YN = 'Y'
	</update>
	
	<select id="selectCertifiedEmail" resultType="CertifiedUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 계정 인증 확인 */
		
		SELECT *
		FROM   T_PERSON_CERTIFIED
		WHERE  1=1
		AND    CERTIFIED_YN = 'Y'
		AND    USER_ID = #{ userId }
	</select>
	
	<insert id="certifiedEmail" parameterType="CertifiedUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 계정 인증 */
		
		INSERT INTO toy.T_PERSON_CERTIFIED ( ID, USER_ID, CERTIFIED_CODE, I_DATE )
		VALUES ( nextval(toy.T_PERSON_CERTIFIED_SEQ), #{ userId }, #{ certifiedCode }, NOW() )
		ON DUPLICATE KEY UPDATE CERTIFIED_CODE = #{ certifiedCode }, I_DATE = NOW()
	</insert>
	
	<update id="successCertifiedEmail" parameterType="CertifiedUserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 계정 활성화 */
		
		UPDATE T_PERSON_CERTIFIED
		SET    CERTIFIED_YN = 'Y'
		     , U_DATE = NOW()
		WHERE  1=1
		AND    USER_ID = #{ userId }
	</update>
	
	<update id="successCertifiedRole" parameterType="UserDTO">
		/* com.project.toy.user.mapper.UserMapper, 사용자 계정 권한 업데이트 'GUEST -> USER' */
		
		UPDATE T_PERSON
		SET    ROLE = 'USER'
		     , U_DATE = NOW()
		WHERE  1=1
		AND    USER_ID = #{ userId }
	</update>
	
	<insert id="updateProfileImg" parameterType="UpdateUserDTO">
		UPDATE T_PERSON
		SET    U_DATE = NOW(),
		       PROFILE_IMG = #{ fileUrl }
		WHERE  1=1
		AND    USER_ID = #{ userId }
	</insert>
	
	<select id="selectProfileImg" resultType="UpdateUserDTO">
		SELECT USER_ID, 
		       PROFILE_IMG
		FROM   T_PERSON
		WHERE  1=1
		AND    USER_ID = #{ userId }
	</select>
	
</mapper>