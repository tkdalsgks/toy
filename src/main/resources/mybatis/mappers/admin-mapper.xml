<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.toy.admin.mapper.AdminMapper">

	<sql id="userColumns">
		USER_NO
		, USER_ID
		, USER_EMAIL
		, USER_NICKNAME
		, PROVIDER
		, ROLE
		, I_DATE
	</sql>

	<select id="selectAuthModel" resultType="AdminDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 전체 권한 모델 리스트 (UN_USER 제외) */
		
		SELECT MODEL_NAME 
		FROM   T_AUTH_MODEL 
		WHERE  1=1
		AND    USE_YN = 'Y'
		AND    MODEL_NAME != "UN_USER"
	</select>
	
	<select id="selectAuthUser" resultType="AdminDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 해당 사용자 권한 모델 출력 */
		
		SELECT B.USER_ID, A.MODEL_NAME
		FROM   T_AUTH_MODEL A
		LEFT OUTER JOIN T_PERSON B ON A.MODEL_NAME = B.ROLE
		WHERE  1=1
		AND    A.USE_YN = 'Y'
		AND    B.USER_NO = #{ value }
	</select>
	
	<select id="selectListUser" resultType="AdminDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 전체 사용자 리스트 */
		
		SELECT USER_NO 			AS userNo
		     , USER_ID 			AS userId
		     , USER_EMAIL 		AS userEmail
		     , USER_NICKNAME 	AS userNickname
		     , PROVIDER			AS provider
		     , ROLE				AS role
		     , I_DATE			AS IDate
		FROM   toy.T_PERSON
		WHERE  1=1
		AND    USE_YN = 'Y'
		ORDER BY USER_NO DESC
	</select>
	
	<!-- 상세보기 -->
	<select id="findByUserId" resultType="AdminDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 해당 사용자 출력 */
		
		SELECT <include refid="userColumns" />
		FROM   T_PERSON
		WHERE  1=1
		AND    USER_NO = #{ value }
	</select>
	
	<!-- 커뮤니티 게시글 리스트 -->
	<select id="findByBoardIdAndCommunity" resultType="BoardResponseDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 커뮤니티 작성한 게시글 출력 */
		
		SELECT A.ID
		     , A.BOARD_SEQ
		     , A.TITLE
		     , A.DELETE_YN
		     , A.I_DATE
		FROM   BOARD A
		LEFT OUTER JOIN T_PERSON B ON A.WRITER_ID = B.USER_ID
		WHERE  1=1
		AND    A.BOARD_SEQ = '1'
		AND    A.DELETE_YN = '0'
		AND    B.USER_NO = #{ id }
		ORDER BY A.ID DESC
	</select>
	
	<!-- 리뷰 게시글 리스트 -->
	<select id="findByBoardIdAndReview" resultType="BoardResponseDTO">
		/* com.project.toy.admin.mapper.AdminMapper, 리뷰 작성한 게시글 출력 */
		
		SELECT B.ID
		     , B.BOARD_SEQ
		     , B.TITLE
		     , B.DELETE_YN
		     , B.I_DATE
		FROM   BOARD B
		     , T_PERSON A
		WHERE  1=1
		AND    B.WRITER_ID = A.USER_ID
		AND    B.BOARD_SEQ = '2'
		AND    B.DELETE_YN = '0'
		AND    A.USER_NO = #{ id }
		ORDER BY B.ID DESC
	</select>
	
	<!-- 전체 댓글 리스트 -->
	
	
	<!-- 사용자 수 카운팅 -->
	<select id="countUser" parameterType="SearchDTO" resultType="int">
		/* com.project.toy.admin.mapper.AdminMapper, 사용자 수 카운팅 */
		
		SELECT COUNT(1)
		FROM   T_PERSON
		WHERE  1=1
		AND    USE_YN = 'Y'
	</select>
	
	<!-- 권한 변경 업데이트 -->
	<update id="updateAuthUser" parameterType="UpdateUserDTO">
		/* com.project.toy.admin.mapper.AdminMapper, [관리자] 권한 변경 업데이트 */
		
		UPDATE T_PERSON
		SET    ROLE = #{ role },
		       U_DATE = NOW()
		WHERE  USER_ID = #{ userId }
	</update> 
	
</mapper>