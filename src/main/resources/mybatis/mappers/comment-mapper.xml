<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.toy.comment.mapper.CommentMapper">
	
	<sql id="commentColumns">
		ID
		, BOARD_ID
		, CONTENT
		, WRITER_ID
		, WRITER
		, RATING
		, DELETE_YN
		, I_DATE
		, U_DATE
	</sql>
	
	<select id="findByCommentId" parameterType="long" resultType="CommentResponseDTO">
		/* com.project.toy.comment.dto.CommentResponseDTO */
		
		SELECT <include refid="commentColumns" />
		FROM COMMENT
		WHERE DELETE_YN = 'N'
		AND   ID = #{ id }
	</select>
	
	<!-- 저장 -->
	<insert id="saveComment" parameterType="CommentRequestDTO" useGeneratedKeys="true" keyProperty="id">
		/* com.project.toy.comment.dto.CommentRequestDTO */
		
		INSERT INTO COMMENT ( <include refid="commentColumns" /> )
		VALUES ( #{ id }, #{ boardId }, #{ content }, #{ writerId }, #{ writer }, #{ rating }, 'N', NOW(), NULL )
	</insert>
	
	<!-- 댓글 수 업데이트 -->
	<update id="updateCountComment" parameterType="CommentRequestDTO">
		UPDATE BOARD B
		SET    B.COMMENT_CNT = ( SELECT COUNT(1)
		                         FROM   COMMENT C
		                         WHERE  1=1
		                         AND    C.BOARD_ID = #{ boardId } )
		WHERE  1=1
		AND    B.DELETE_YN = 0
		AND    B.ID = #{ boardId }
	</update>
	
	<!-- 수정 -->
	<update id="updateComment" parameterType="CommentRequestDTO">
		/* com.project.toy.comment.dto.CommentRequestDTO */
		
		UPDATE COMMENT
		SET    U_DATE = NOW()
		     , CONTENT = #{ content }
		     , WRITER = #{ writer }
		WHERE  1=1
		AND    ID = #{ id }
	</update>
	
	<!-- 삭제 -->
	<update id="deleteComment" parameterType="long">
		UPDATE COMMENT
		SET    CONTENT = '[삭제된 댓글입니다.]'
		     , DELETE_YN = 'Y'
		     , U_DATE = NOW()
		WHERE  1=1
		AND    ID = #{ id }
	</update>
	
	<!-- 리스트 조회 -->
	<select id="findAll" parameterType="long" resultType="CommentResponseDTO">
		/* com.project.toy.comment.dto.CommentResponseDTO */
		
		SELECT <include refid="commentColumns" />
		FROM   COMMENT
		WHERE  1=1
		AND    BOARD_ID = #{ value }
		ORDER BY ID DESC
	</select>
	
	<!-- 댓글 갯수 카운트 -->
	<select id="countComment" parameterType="long" resultType="int">
		SELECT COUNT(1)
		FROM   COMMENT
		WHERE  1=1
		AND    BOARD_ID = #{ boardId }
	</select>
	
</mapper>